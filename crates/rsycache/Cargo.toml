[package]
name = "rsycache"
authors.workspace = true
description = "a local cache manager for rust"
edition.workspace = true
homepage.workspace = true
license.workspace = true
repository.workspace = true
rust-version.workspace = true
version.workspace = true
readme = "README.md"
categories = ["development-tools::debugging"]
keywords = ["logging", "log"]
include = ["../LICENSE-APACHE", "../LICENSE-MIT", "**/*.rs", "Cargo.toml"]

[lib]
crate-type = ["rlib", "cdylib"]

[package.metadata.docs.rs]
# all-features = true
# rustdoc-args = ["x86_64-unknown-linux-gnu", "wasm32-unknown-unknown"]
# targets.workspace = ["--generate-link-to-definition"]

[features]


[dependencies]
rsyhash = { workspace = true, features = ["rustc_hash_std"], optinal = true }

# [`cached`](https://github.com/jaemk/cached) provides implementations of several caching structures
# as well as a handy macros for defining memoized functions.
cached = "^0.55"

# [`lru`](https://github.com/jeromefroe/lru-rs) is an implementation of a LRU cache. The cache
# supports put, get, get_mut and pop operations, all of which are O(1). This crate was heavily
# influenced by the LRU Cache implementation in an earlier version of Rust's std::collections crate.
lru = "^0.13"

# [`Moka`](https://github.com/moka-rs/moka) is a fast, concurrent cache library for Rust.
# Moka is inspired by the [`Caffeine`](https://github.com/ben-manes/caffeine) library for Java.
[dependencies.moka]
version = "^0.12"
features = ["sync"]

# [`quick_cache`](https://github.com/arthurprs/quick-cache) Lightweight and high performance
# concurrent cache optimized for low cache overhead.
[dependencies.quick_cache]
version = "^0.6"

[lints]
workspace = true

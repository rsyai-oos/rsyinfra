[package]
name = "rsyhash"
authors.workspace = true
edition.workspace = true
homepage.workspace = true
license.workspace = true
readme.workspace = true
repository.workspace = true
rust-version.workspace = true
version.workspace = true


[lib]
crate-type = ["rlib", "cdylib"]

[features]
default = []

# ahash features
ahash_std = ["ahash/std"]
ahash_runtime_rng = ["ahash/runtime-rng"]
ahash_compile_time_rng = ["ahash/compile-time-rng"]
ahash_no_rng = ["ahash/no-rng"]
ahash_atomic_polyfill = ["ahash/atomic-polyfill"]
ahash_nightly_arm_aes = ["ahash/nightly-arm-aes"]
ahash = ["dep:ahash"]

# rustc_hash features
rustc_hash_std = ["rustc-hash/std"]
rustc_hash_nightly = ["rustc-hash/nightly"]
rustc_hash_rand = ["rustc-hash/rand"]
rustc_hash_all = ["rustc_hash_std", "rustc_hash_nightly", "rustc_hash_rand"]
rustc_hash = ["dep:rustc-hash"]

[dependencies]

# [`ashsh`](https://github.com/tkaitchuck/ahash) is the fastest, DOS resistant hash currently available in Rust.
# AHash is intended exclusively for use in in-memory hashmaps.
[dependencies.ahash]
version = "^0.8"
default-features = false
features = []
optional = true

# [`rustc-hash`](https://github.com/rust-lang/rustc-hash) is A speedy, non-cryptographic hashing algorithm used by rustc.
# The hash map in std uses SipHash by default, which provides resistance against DOS attacks.
# These attacks aren't a concern in the compiler so we prefer to use a quicker, non-cryptographic hash algorithm.
# [no-std] supported
[dependencies.rustc-hash]
version = "^2"
default-features = false
optional = true

[lints]
workspace = true
